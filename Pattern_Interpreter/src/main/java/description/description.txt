Паттерн Інтерпретатор (Interpreter) визначає подання граматики для заданої мови та інтерпретатор речень цієї мови.
Як правило, даний шаблон проектування застосовується для операцій, що часто повторюються.

Хоча патерн вимагає розуміння теорії формальних мов та граматик, насправді він не такий складний у розумінні.

Учасники
AbstractExpression: визначає інтерфейс вираження, оголошує метод Interpret()

TerminalExpression: термінальний вираз, що реалізує метод Interpret() для термінальних символів граматики.
Для кожного символу граматики створюється об'єкт TerminalExpression

NonterminalExpression: нетермінальний вираз, представляє правило граматики.
Для кожного окремого правила граматики створюється свій об'єкт NonterminalExpression.

Context: містить загальну інформацію для інтерпретатора.
Може використовуватися об'єктами термінальних та нетермінальних виразів для збереження стану операцій
та подальшого доступу до збереженого стану

Client: будує пропозиції мови з даною граматикою у вигляді абстрактного синтаксичного дерева,
вузлами якого є об'єкти TerminalExpression та NonterminalExpression

Методи Interpret у нетермінальних виразах дозволяють реалізувати правила граматики.
При цьому ми легко може додати нові правила граматики,
визначивши нові об'єкти NonterminalExpression зі своєю реалізацією методу Interpret.
Однак цей патерн підходить тільки для тих випадків, коли правила граматики відносно прості.
У складніших випадках слід вибирати інші способи проектування програми.